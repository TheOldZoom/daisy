generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id               String           @id // Unique Discord ID
  fmUser           String? // User's Lastfm user
  selfprefix       String? // User's custom prefix for bot commands
  blacklistedSince DateTime? // Date when the user was blacklisted
  timezone         String? // User's timezone
  birthday         String? // User's birthday
  messages         userMessages[] // One-to-many relation with `userMessages`
  globalLevel      globalUserLevel? // One-to-one relation with global user level
  guildLevels      guildUserLevel[] // One-to-many relation with guild-based user levels
}

model userMessages {
  id            Int      @id @default(autoincrement())
  guildId       String
  userId        String
  total         Int      @default(0)
  wordCount     Int      @default(0)
  lastMessageAt DateTime @updatedAt

  user user @relation(fields: [userId], references: [id])
}

model globalUserLevel {
  id          Int      @id @default(autoincrement())
  userId      String   @unique
  level       Int      @default(0)
  xp          Int      @default(0)
  lastLevelUp DateTime
  rank        Int?
  bonusXP     Int      @default(0)

  user user @relation(fields: [userId], references: [id])
}

model guildUserLevel {
  id          Int      @id @default(autoincrement())
  userId      String
  guildId     String
  level       Int      @default(0)
  xp          Int      @default(0)
  lastLevelUp DateTime
  rank        Int?
  bonusXP     Int      @default(0)

  user  user  @relation(fields: [userId], references: [id])
  guild guild @relation(fields: [guildId], references: [id])

  @@unique([userId, guildId])
}

model guild {
  id     String  @id
  name   String
  prefix String?

  guildLevels guildUserLevel[]
}
